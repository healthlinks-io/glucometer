#: import sm kivy.uix.screenmanager
#:import Factory kivy.factory.Factory


<ActionSpinnerOptions@SpinnerOption>
    background_color: .4, .4, .4, 1
    sync_height: True
    height: '80sp'
<ActionSpinner@Spinner+ActionItem>
    sync_height: True
    #pos_hint: {'center_x': .5, 'center_y': .5}
    canvas.before:
        Color:
            rgba: 0.120, 0.120, 0.120, 1
        Rectangle:
            size: self.size
            pos: self.pos
    border: 27, 20, 12, 12
    background_normal: 'atlas://data/images/defaulttheme/action_group'
    option_cls: Factory.ActionSpinnerOptions

BoxLayout:
    orientation: 'vertical'
    canvas.before:
        Color:
            rgb: .6, .6, .6
        Rectangle:
            size: self.size
            source: 'res/background.png'


    ActionBar:
        id: bar
        size_hint: 1, 0.09
        ActionView:
            use_separator: True
            ActionPrevious:
                id: previousid
                important: True

                title: app.set_time(0)
                on_press: sm.transition.direction = 'right'
                on_release:
                    sm.current = 'home'
                    spnr.text = 'Home'
                    app.set_previous('home')
                with_previous: False
                app_icon_width: 0.1
            ActionSpinner:
                id: spnr
                size_hint: 0.75, None
                #width: '200sp'
                height: bar.height
                important: False
                values: app.screen_names
                on_text: app.set_screen()
    BoxLayout:
        size_hint_y: None
        height: '2sp'
        canvas:
            Color:
                rgba: (34.0/256, 201.0/256, 198.0/256, .6)
            Rectangle:
                size: self.size
                pos: self.pos

    CustomScreenManager:
        id: sm 

<NewEntryPopup>:
    size: app.width/1.5, app.height/1.5
    pos_hint:{'y':(.25)}
    size_hint: None, None
    title: 'New Entry'
    BoxLayout:
        orientation: 'vertical'
        BoxLayout:
            size_hint_y: 1.78
            BoxLayout:
                orientation: 'vertical'
                Label:
                    text: 'Date'
                TextInput:
                    id: date
                    font_size: '15sp'
                    multiline: False
                    text: root.get_date()
            BoxLayout:
                orientation: 'vertical'
                Label:
                    text: 'Time'
                TextInput:
                    id: time
                    font_size: '15sp'
                    multiline: False
                    text: root.get_time()

        BoxLayout:
            size_hint_y: 1.9
            BoxLayout:
                orientation: 'vertical'
                Label:
                    text: 'Bg'
                TextInput:
                    id: bg
                    multiline: False
                    font_size: '15sp'
                    # A really messy char limit + only numbers
                    input_filter: (lambda text, from_undo: str(text[:3 - len(self.text)]).translate(None, 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ/=-:;][!@#$%^&*(){}\\\'\".,'))
            BoxLayout:
                orientation: 'vertical'
                Label:
                    text: 'Carbs'
                TextInput:
                    id: carbs
                    multiline: False
                    font_size: '15sp'
                    # A really messy char limit + only numbers
                    input_filter: (lambda text, from_undo: str(text[:3 - len(self.text)]).translate(None, 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ/=-:;][!@#$%^&*(){}\\\'\".,'))
            BoxLayout:
                orientation: 'vertical'
                Label:
                    text: 'Bolus'
                TextInput:
                    id: bolus
                    font_size: '15sp'
                    multiline: False
                    # A really messy char limit + only numbers
                    input_filter: (lambda text, from_undo: str(text[:2 - len(self.text)]).translate(None, 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ/=-:;][!@#$%^&*(){}\\\'\".,'))
        Label:
            text: 'Notes'
            size_hint_y: .8
        TextInput:
            id: notes
            multiline: False
            font_size: '15sp'
            input_filter: (lambda text, from_undo: text[:100 - len(self.text)])
        Button:
            text: "submit"
            on_release:
                root.submit()
